package server

import (
	"net"
	"zRep/primitive/pedersen"

	"github.com/dedis/crypto/abstract"
)


type AnonServer struct {
	// local address
	LocalAddr *net.TCPAddr
	// client-side config
	CoordinatorAddr *net.TCPAddr
	// crypto variables
	Suite abstract.Suite
	PrivateKey abstract.Secret
	PublicKey abstract.Point
	OnetimePseudoNym abstract.Point
	G abstract.Point

	EndingKeyMap map[string]abstract.Point
	EndingCommMap map[string]abstract.Point

	// buffer data
	IsConnected bool
	// next hop in topology
	NextHop *net.TCPAddr
	// previous hop in topology
	PreviousHop *net.TCPAddr
	// map current public key with previous key
	KeyMap map[string]abstract.Point
	// generated by elgmal encryption
	A abstract.Point

	// used for modPow encryption
	Roundkey abstract.Secret

	PedersenBase *pedersen.PedersenBase

}

func (s *AnonServer) AddIntoEndingMap(key abstract.Point, val abstract.Point) {
	keyStr := key.String()
	s.EndingKeyMap[keyStr] = key
	s.EndingCommMap[keyStr] = val
}
